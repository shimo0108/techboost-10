// Code generated by MockGen. DO NOT EDIT.
// Source: csv.go

// Package mock_csv is a generated GoMock package.
package mock_csv

import (
	entity "hello-world/pkg/hospital/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCSVClient is a mock of CSVClient interface.
type MockCSVClient struct {
	ctrl     *gomock.Controller
	recorder *MockCSVClientMockRecorder
}

// MockCSVClientMockRecorder is the mock recorder for MockCSVClient.
type MockCSVClientMockRecorder struct {
	mock *MockCSVClient
}

// NewMockCSVClient creates a new mock instance.
func NewMockCSVClient(ctrl *gomock.Controller) *MockCSVClient {
	mock := &MockCSVClient{ctrl: ctrl}
	mock.recorder = &MockCSVClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCSVClient) EXPECT() *MockCSVClientMockRecorder {
	return m.recorder
}

// ListHospitalsInformation mocks base method.
func (m *MockCSVClient) ListHospitalsInformation() (entity.Hospitals, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHospitalsInformation")
	ret0, _ := ret[0].(entity.Hospitals)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListHospitalsInformation indicates an expected call of ListHospitalsInformation.
func (mr *MockCSVClientMockRecorder) ListHospitalsInformation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHospitalsInformation", reflect.TypeOf((*MockCSVClient)(nil).ListHospitalsInformation))
}
